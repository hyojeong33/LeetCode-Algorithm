/*Question
Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.
You may assume that each input would have exactly one solution, and you may not use the same element twice.
You can return the answer in any order.
Example 1:
Input: nums = [2,7,11,15], target = 9 Output: [0,1] Explanation: Because nums[0] + nums[1] == 9, we return [0, 1]. 
Example 2:
Input: nums = [3,2,4], target = 6 Output: [1,2] 
Example 3:
Input: nums = [3,3], target = 6 Output: [0,1]
*/

/*Access
In addition to the following numbers with the input nums loop, the position of the array for the same time as the target number is put into the response array and returned.
When you put it in For loop, find the length of nums[], divide it in half and add 1. 
If you divide int by 2, you must add 1 because if there is a decimal point, it will be lowered and given a value. 
Create a nested loop that adds the following numbers by creating another for loop in the for loop above. 
Create an if statement in the second for loop and add the value, and if it is the same as the target number, put it in the answer array to return the value
*/


class Solution {
    public int[] twoSum(int[] nums, int target) {
        int size = nums.length;
        int ans[] = new int[2];
        for (int i = 0; i < size / 2 + 1; i++) {
            for (int j = 1; j < size; j++) {
                if (nums[i] + nums[j] == target) {
                    ans[0] = i;
                    ans[1] = j;
                    return ans; 
                }
            }
        }
        return ans;
    }
}
